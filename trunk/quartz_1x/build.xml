<project name="quartz" default="build">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

  <property file="build.properties"/>
  
  <target name="init">
    <property name="name" value="quartz"/>
    <property name="version"
      value="${version.major}.${version.minor}.${version.iteration}"/>
    <property name="spec-version"
      value="${version.major}.${version.minor}"/>
    <property name="distname" value="${name}-${version}"/>
    <tstamp>
      <format property="year" pattern="yyyy" locale="en"/>
    </tstamp>

    <echo message="----------- ${name} ${version} [${year}] ------------"/>
    <echo message=""/>

    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="src.dir" value="src"/>
    <property name="web.dir" value="web"/>
    <property name="ex-src.dir" value="src/java/examples"/>
    <property name="dest.dir" value="${build.dir}/classes"/>
    <property name="ex-dest.dir" value="${build.dir}/exclasses"/>
    <property name="sar.dest.dir" value="${build.dir}/sar"/>
    <property name="doc.dir" value="docs"/>
    <property name="javadoc.dir" value="${doc.dir}/javadoc"/>
    <property name="test-src.dir" value="src/java/test"/>
    <property name="test-dest.dir" value="${build.dir}/testclasses"/>


    <path id="classpath" >
      <pathelement location="${basedir}/lib/jdbc2_0-stdext.jar" />
      <pathelement location="${basedir}/lib/jta.jar" />
      <pathelement location="${basedir}/lib/activation.jar" />
      <pathelement location="${basedir}/lib/javamail.jar" />
      <pathelement location="${basedir}/lib/ejb.jar" />
      <pathelement location="${basedir}/lib/servlet.jar" />
      
      <pathelement location="${basedir}/lib/commons-beanutils.jar" />
      
      <pathelement location="${basedir}/lib/commons-collections.jar" />
      <pathelement location="${basedir}/lib/commons-logging.jar" />
      <pathelement location="${basedir}/lib/commons-dbcp-1.1.jar" />
      
      <pathelement location="${basedir}/lib/commons-digester.jar" />
      <pathelement location="${basedir}/lib/commons-pool-1.1.jar" />
      <pathelement location="${basedir}/lib/log4j.jar" />
      <pathelement location="${basedir}/lib/junit.jar" />
      <pathelement location="${basedir}/lib/classes12.zip" />
      <pathelement location="${lib.weblogic.jar}" />
      <pathelement location="${lib.jboss-common.jar}" />
      <pathelement location="${lib.jboss-jmx.jar}" />
      <pathelement location="${lib.jboss-system.jar}" />
      <pathelement location="${lib.jboss.jar}" />
    </path>

    <path id="compile-ex.classpath">
      <path refid="classpath"/>
      <pathelement location="${dest.dir}"/>
    </path>
    
    <path id="test-classpath">
      <path refid="classpath"/>
      <pathelement location="${dest.dir}"/>
      
      <pathelement location="${test-dest.dir}"/>
    </path>

    <path id="javadoc-classpath">
      <path refid="classpath"/>
      <pathelement location="${basedir}/lib/${output-jar}"/>
    </path>

    <available property="oracle.present" classname="oracle.sql.BLOB" classpathref="classpath"/>
    <available property="servlet.present" classname="javax.servlet.http.HttpServlet" classpathref="classpath"/>
    <available property="dbcp.present" classname="org.apache.commons.dbcp.BasicDataSource" classpathref="classpath"/>
    <available property="weblogic.present" classname="weblogic.logging.NonCatalogLogger" classpathref="classpath"/>
    <available property="jboss.present" classname="org.jboss.system.ServiceMBeanSupport" classpathref="classpath"/>
    <available property="jta.present" classname="javax.transaction.UserTransaction" classpathref="classpath"/>
    <available property="jmx.present" classname="javax.management.MBeanServer" classpathref="classpath"/>
    <available property="ejb.present" classname="javax.ejb.EJBHome" classpathref="classpath"/>
    
    <available property="beanutils.present" classname="org.apache.commons.beanutils.ConvertUtils" classpathref="classpath"/>
    
    <available property="digester.present" classname="org.apache.commons.digester.Digester" classpathref="classpath"/>
    <condition property="servlet-and-dbcp.present">
      <and>
        <isset property="servlet.present" />
        <isset property="dbcp.present" />
      </and>
    </condition>
    
    <condition property="beanutils-and-digester.present">

      <and>

        <isset property="beanutils.present" />

        <isset property="digester.present" />

      </and>

    </condition>
    <pathconvert pathsep=";" property="printable.classpath" refid="classpath"/>
    <pathconvert pathsep=";" property="printable.test-classpath" refid="classpath"/>

    <property name="output-jar" value="quartz.jar"/>
	<property name="output-jar-src" value="quartz-src.jar"/>
	
    <condition property="print-servlet.present">
      <isset property="servlet.present" />
    </condition>
    <property name="print-servlet.present" value="false"/>

    <condition property="print-jta.present">
      <isset property="jta.present" />
    </condition>
    <property name="print-jta.present" value="false"/>

    <condition property="print-ejb.present">
      <isset property="ejb.present" />
    </condition>
    <property name="print-ejb.present" value="false"/>

    <condition property="print-jmx.present">
      <isset property="jmx.present" />
    </condition>
    <property name="print-jmx.present" value="false"/>


    <condition property="print-dbcp.present">
      <isset property="dbcp.present" />
    </condition>
    <property name="print-dbcp.present" value="false"/>
    
    <condition property="print-jboss.present">
      <isset property="jboss.present" />
    </condition>
    <property name="print-jboss.present" value="false"/>

    <condition property="print-oracle.present">
      <isset property="oracle.present" />
    </condition>
    <property name="print-oracle.present" value="false"/>

    <condition property="print-weblogic.present">
      <isset property="weblogic.present" />
    </condition>
    <property name="print-weblogic.present" value="false"/>
    
    
    
    <condition property="print-beanutils.present">

      <isset property="beanutils.present" />

    </condition>

    <property name="print-beanutils.present" value="false"/>
    
    
    
    <condition property="print-digester.present">

      <isset property="digester.present" />

    </condition>

    <property name="print-digester.present" value="false"/>

    <echo message="Building JAR file: '${output-jar}'"/>
    <echo message="   - including DBCP options: ${print-dbcp.present}"/>
    <echo message="   - including Servlet options: ${print-servlet.present}"/>
    <echo message="   - including JTA options: ${print-jta.present}"/>
    <echo message="   - including EJB options: ${print-ejb.present}"/>
    <echo message="   - including JMX options: ${print-jmx.present}"/>
    <echo message="   - including Oracle options: ${print-oracle.present}"/>
    <echo message="   - including Weblogic options: ${print-weblogic.present}"/>
    <echo message="   - including JBoss options: ${print-jboss.present}"/>
    
    <echo message="   - including Commons BeanUtils options: ${print-beanutils.present}"/>
    
    <echo message="   - including Commons Digester options: ${print-digester.present}"/>
    
    
    <echo message=""/>

  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage" depends="init" description="DEPRECATED: use ant -projecthelp instead">
    <echo message="Use ant -projecthelp for usage information."/>
  </target>

  <!-- =================================================================== -->
  <!-- Clean up.                                                           -->
  <!-- =================================================================== -->

  <target name="clean" depends="init" description="clean up output files">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${ex-dist.dir}"/>
  	<delete file="${output-jar-src}"/>
    <delete>
      <fileset dir="${lib.dir}" includes="${name}*.jar"/>
    </delete>
  </target>


  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->

  <target name="build-prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dest.dir}"/>
    <mkdir dir="${ex-dest.dir}"/>
  </target>


  <!-- =================================================================== -->
  <!-- Stages the source directory                                       -->
  <!-- =================================================================== -->

  <target name="stage">
    <delete quiet="true" dir="${build.dir}/tmpsrc"/>
    <mkdir dir="${build.dir}/tmpsrc"/>
    <copy todir="${build.dir}/tmpsrc">
      <fileset dir="${src.dir}/java/main"
        includes="org/quartz/core/QuartzScheduler.java"/>
      <filterset>
        <filter token="version.major" value="${version.major}"/>
        <filter token="version.minor" value="${version.minor}"/>
        <filter token="version.iteration" value="${version.iteration}"/>
      </filterset>
    </copy>
    <copy todir="${build.dir}/tmpsrc">
      <fileset dir="${src.dir}/java/main" includes="**/*.java">
        <exclude name="org/quartz/core/QuartzScheduler.java"/>
	    <exclude name="org/quartz/ee/servlet/QuartzInitializerServlet.java" unless="servlet-and-dbcp.present"/>
	    <exclude name="org/quartz/ee/jta/**" unless="jta.present"/>
	    <exclude name="org/quartz/ee/ejb/**" unless="ejb.present"/>
	    <exclude name="org/quartz/ee/jmx/**" unless="jmx.present"/>
	    <exclude name="org/quartz/jobs/ee/jmx/**" unless="jmx.present"/>
	    <exclude name="org/quartz/jobs/ee/ejb/**" unless="ejb.present"/>
	    <exclude name="org/quartz/utils/PoolingConnectionProvider.java" unless="dbcp.present"/>
	    <exclude name="org/quartz/impl/StdSchedulerFactory.java" unless="dbcp.present"/>
	    <exclude name="org/quartz/impl/WeblogicLogger.java" unless="weblogic.present"/>
	    <exclude name="org/quartz/utils/weblogic/WeblogicConnectionProvider.java" unless="weblogic.present"/>
	    <exclude name="org/quartz/core/QuartzScheduler.java" />
	    <exclude name="**/oracle/*" unless="oracle.present"/>
	    <exclude name="**/jboss/*" unless="jboss.present"/>
	    
	    <exclude name="org/quartz/xml/**" unless="beanutils-and-digester.present"/>
	    
	    <exclude name="org/quartz/plugins/xml/**" unless="beanutils-and-digester.present"/>
	  </fileset>
      <fileset dir="${src.dir}/java/plugins" includes="**/*.java" />
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Compiles the source directory omitting files depending on jars present -->
  <!-- ====================================================================== -->

  <target name="compile" depends="build-prepare">
    <antcall target="stage"/>
    <javac srcdir="${build.dir}/tmpsrc" 
      destdir="${dest.dir}"
      debug="${compile-with-debug}">
      <classpath refid="classpath"/>
    </javac>
    <rmic classname="org.quartz.core.QuartzScheduler" classpath="${dest.dir}"
      base="${dest.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the examples                                               -->
  <!-- =================================================================== -->

  <target name="compile-ex">
    <echo message="Compile classpath = ${printable.classpath}"/>
    <javac srcdir="${ex-src.dir}"
      destdir="${ex-dest.dir}"
      debug="${compile-with-debug}"
      includes="**" >
      <classpath refid="compile-ex.classpath" />
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the JUnit tests                                            -->
  <!-- =================================================================== -->

  <target name="compile-tests">
    <echo message="Compile classpath = ${printable.classpath}"/>
    
    <copy todir="${test-dest.dir}">
    
      <fileset dir="${test-src.dir}">
      
        <include name="**/*.xml"/>
        
      </fileset>
      
    </copy>
    <mkdir dir="${test-dest.dir}"/>
    <javac srcdir="${test-src.dir}"
      destdir="${test-dest.dir}"
      includes="**"
      debug="${debug}"
      optimize="${optimize}"
      classpathref="test-classpath" />
  </target>

  <!-- =================================================================== -->
  <!-- Create jar file                                                     -->
  <!-- =================================================================== -->

  <target name="jar" depends="init,compile">
    <copy todir="${dest.dir}">
      <fileset dir="${src.dir}/java/main">
      
        <include name="**/*.properties"/>
        
        <include name="**/*.dtd"/>
        
        <include name="**/*.xsd"/>
        
        <include name="**/*.xml"/>
        
      </fileset>
    </copy>
    <delete file="${dest.dir}/org/quartz/ee/jmx/jboss/doc-files/quartz-service.xml"/>
  	

    <jar  jarfile="${lib.dir}/${output-jar}" basedir="${dest.dir}" includes="org/quartz/**">
	  <manifest>
	    <attribute name="Built-By" value="${user.name}"/>
	    <attribute name="Main-Class" value="org.quartz.helpers.VersionPrinter"/>
        <attribute name="Sealed" value="false"/>
	    <section name="quartz">
	      <attribute name="Implementation-Title" value="Quartz"/>
	      <attribute name="Implementation-Version" value="${version} ${TODAY}"/> 
	      <attribute name="Implementation-Vendor" value="The Quartz project developers."/>
	      <attribute name="Implementation-Vendor-URL" value="http://www.quartzscheduler.org"/>
	      <attribute name="Specification-Title" value="Quartz"/>
	      <attribute name="Specification-Version" value="${spec-version}"/> 
	      <attribute name="Specification-Vendor" value="The Quartz project developers."/>
	      <attribute name="Specification-Vendor-URL" value="http://www.quartzscheduler.org"/>
	      <attribute name="Sealed" value="false"/>
	    </section>
	  </manifest>
	</jar>
  </target>


  <!-- =================================================================== -->
  <!-- Create jar file of source code                                      -->
  <!-- =================================================================== -->

  <target name="jar-src" depends="init,stage">

    <copy todir="${build.dir}/tmpsrc">
      <fileset dir="${ex-src.dir}" includes="**/*"/>
    </copy>

	<jar  jarfile="${output-jar-src}" basedir="${build.dir}/tmpsrc" includes="**">
	  <manifest>
	    <attribute name="Built-By" value="${user.name}"/>
	    <attribute name="Main-Class" value="org.quartz.helpers.VersionPrinter"/>
	        <attribute name="Sealed" value="false"/>
	    <section name="quartz">
	      <attribute name="Implementation-Title" value="Quartz"/>
	      <attribute name="Implementation-Version" value="${version} ${TODAY}"/> 
	      <attribute name="Implementation-Vendor" value="The Quartz project developers."/>
	      <attribute name="Implementation-Vendor-URL" value="http://www.quartzscheduler.org"/>
	      <attribute name="Specification-Title" value="Quartz"/>
	      <attribute name="Specification-Version" value="${spec-version}"/> 
	      <attribute name="Specification-Vendor" value="The Quartz project developers."/>
	      <attribute name="Specification-Vendor-URL" value="http://www.quartzscheduler.org"/>
	      <attribute name="Sealed" value="false"/>
	    </section>
	  </manifest>
	</jar>

  </target>
  
  <!-- =================================================================== -->
  <!-- Create jar file of examples                                         -->
  <!-- =================================================================== -->

  <target name="jar-ex" depends="init,compile-ex">
    <jar  jarfile="${lib.dir}/examples.jar"
      basedir="${ex-dest.dir}"
      includes="**/*" />
  </target>


  <!-- =================================================================== -->
  <!-- Create a JBoss 3 SAR file                                                     -->
  <!-- =================================================================== -->

  <target name="sar" depends="init, jar"
    description="build a JBoss 3 SAR file, including Quartz as a JMX service.">
    <copy todir="${sar.dest.dir}">
      <fileset dir="${lib.dir}" includes="${output-jar}"/>
    </copy>
    <mkdir dir="${sar.dest.dir}/META-INF"/>
    <copy tofile="${sar.dest.dir}/META-INF/jboss-service.xml"
    
          file="${src.dir}/java/main/org/quartz/ee/jmx/jboss/doc-files/quartz-service.xml"/>
    <jar  jarfile="${lib.dir}/quartz-${version}.sar"
      basedir="${sar.dest.dir}" />
  </target>


  <!-- =================================================================== -->
  <!-- Build                                                               -->
  <!-- =================================================================== -->

  <target name="build" depends="compile,jar"
    description="compile the quartz classes and create the quartz jar"/>

  <target name="build-ex" depends="build,compile-ex,jar-ex"
    description="compile and package everything needed to run the examples"/>

  <target name="build-tests" depends="compile,jar,compile-tests"
    description="compile and package the quartz and test classes"/>

  <!-- ================================================================== -->
  <!-- All                                                                -->
  <!-- ================================================================== -->

  <target name="all" depends="clean,build,build-ex,jar-src,javadoc,dtds"
    description="build everything and create documentation"/>


  <!-- ================================================================== -->
  <!-- Distribute a release                                               -->
  <!-- ================================================================== -->

  <target name="dist" depends="all"
    description="build the release bundles in tar.gz and zip formats">
    <mkdir dir="${dist.dir}"/>
    <patternset id="dist.files">
      <include name="*.txt"/>
      <exclude name="notes.txt"/>
      <include name="build.xml"/>
      <include name="build.properties"/>
      <include name="${doc.dir}/*"/>
      <include name="${doc.dir}/config/**/*"/>
      <include name="${doc.dir}/dbTables/**/*"/>
      <include name="${doc.dir}/dtd/**/*"/>
      <include name="${doc.dir}/faq/**/*"/>
      <include name="${doc.dir}/javadoc/**/*"/>
      <include name="${doc.dir}/tutorial/**/*"/>
      <include name="examples/**/*"/>
      <include name="src/**/*"/>
      <include name="${lib.dir}/**/examples.jar"/>
      <include name="${lib.dir}/**/quartz*"/>
      <include name="${lib.dir}/**/VERSIONS"/>
      <include name="${lib.dir}/**/activation.jar"/>
      <include name="${lib.dir}/**/activation.license.txt"/>
      <include name="${lib.dir}/**/apache.license.txt"/>
      
      <include name="${lib.dir}/**/commons-beanutils.jar*"/>
      <include name="${lib.dir}/**/commons-collections.jar*"/>
      <include name="${lib.dir}/**/commons-dbcp-1.1.jar"/>
      
      <include name="${lib.dir}/**/commons-digester.jar*"/>
      <include name="${lib.dir}/**/commons-logging.jar"/>
      <include name="${lib.dir}/**/commons-pool-1.1.jar"/>
      <include name="${lib.dir}/**/javamail.jar"/>
      <include name="${lib.dir}/**/javamail.license.txt"/>
      <include name="${lib.dir}/**/ejb.jar"/>
      <include name="${lib.dir}/**/ejb.license.txt"/>
      <include name="${lib.dir}/**/jdbc2_0-stdext.jar"/>
      <include name="${lib.dir}/**/jdbc2_0-stdext.license.txt"/>
      <include name="${lib.dir}/**/jta.jar"/>
      <include name="${lib.dir}/**/jta.license.txt"/>
      <include name="${lib.dir}/**/servlet.jar"/>
      <include name="${lib.dir}/**/servlet.license.txt"/>
<!--      <include name="${output-jar-src}"/> -->
<!--      <include name="${ex-src.dir}/**/*"/>  -->
<!--      <include name="${test-src.dir}/**/*"/> -->
<!--      <include name="${web.dir}/**/*"/> -->
    </patternset>
    <tar destfile="${dist.dir}/${distname}.tar.gz"
      compression="gzip">
      <tarfileset dir="." prefix="${distname}">
        <patternset refid="dist.files"/>
      </tarfileset>
    </tar>
    <zip destfile="${dist.dir}/${distname}.zip">
      <zipfileset dir="." prefix="${distname}">
        <patternset refid="dist.files"/>
      </zipfileset>
    </zip>
  </target>


  <!-- =================================================================== -->
  <!-- JavaDoc                                                             -->
  <!-- =================================================================== -->

    <target name="javadoc" depends="init">
        <delete dir="${javadoc.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
        <javadoc sourcepath="${build.dir}/tmpsrc"
            destdir="${javadoc.dir}"
            packagenames="org.quartz.*"
            classpathref="javadoc-classpath"
            author="true"
            version="true"
            stylesheetfile="docs/jd_stylesheet.css"
            windowTitle="Quartz Enterprise Job Scheduler API - ${version}"
            doctitle="Quartz Enterprise Job Scheduler API (${version})"
            footer="&lt;a href=&quot;http://www.opensymphony.com/quartz&quot; target=&quot;_top&quot;&gt;Quartz Project Page&lt;/a&gt;"
            use="true"
            verbose="false">
        </javadoc>
        <!-- <copy overwrite="yes" file="${docs}/main.css" tofile="${docs}/api/stylesheet.css"/> -->
    </target>

    <target name="doc" depends="build-prepare">
        <antcall target="stage"/>
        <delete dir="../dist/docs/api"/>
        <mkdir dir="../dist/docs/api"/>
        <javadoc sourcepath="${build.dir}/tmpsrc"
            destdir="../dist/docs/api"
            packagenames="org.quartz.*"
            classpathref="javadoc-classpath"
            author="true"
            version="true"
            windowTitle="Quartz Enterprise Job Scheduler API - ${version}"
            doctitle="Quartz Enterprise Job Scheduler API (${version})"
            footer="&lt;a href=&quot;http://www.opensymphony.com/quartz&quot; target=&quot;_top&quot;&gt;Quartz Project Page&lt;/a&gt;"
            use="true"
            verbose="false">
        </javadoc>
        <!-- <copy overwrite="yes" file="${docs}/main.css" tofile="${docs}/api/stylesheet.css"/> -->
    </target>
	
  <target name="dtds" depends="init" description="place DTD documentation under doc dir">
    <delete dir="${doc.dir}/dtd"/>
    <mkdir dir="${doc.dir}/dtd"/>
    <copy todir="${doc.dir}/dtd">
      <fileset dir="${src.dir}/java/main/org/quartz/xml"
        includes="*.dtd"/>
    </copy>
  </target>

<!--      additionalparam="-breakiterator" -->

  <!-- =================================================================== -->
  <!-- Run JUnit tests                                                     -->
  <!-- =================================================================== -->

  <target name="run-tests" depends="build-tests"
    description="build and run the unit tests">
    <junit printsummary="yes" haltonfailure="yes">
      <classpath refid="test-classpath" />

      <formatter type="plain"/>


      <sysproperty key="quartz.system.id.dir" value="${test-dest.dir}/"/>
      <sysproperty key="jaxp.debug" value="true"/>
      
      <batchtest fork="no">
        <fileset dir="${test-src.dir}">
          <include name="**/*Test*.java"/>
          
          <exclude name="**/UtilTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>


  <target name="generate-tables" depends="init" >
	<sql
	    driver="oracle.jdbc.driver.OracleDriver"
	    url="jdbc:oracle:thin:@polarbear:1521:dev"
	    userid="quartz"
	    password="quartz"
	    src="docs/dbTables/tables_oracle.sql"
        classpathref="classpath"
	/>
  </target>
  	
</project>
